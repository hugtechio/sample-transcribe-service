{
  "Comment": "A state machine that does mock stock trading.",
  "StartAt": "First state",
  "States": {
    "First state": {
      "Type": "Pass",
      "Next": "Pass"
    },
    "Pass": {
      "Type": "Pass",
      "Next": "Lambda Invoke",
      "Parameters": {
        "Value.$": "States.Hash($.detail.data.object.payment_intent, 'SHA-1')"
      },
      "ResultPath": "$.Hash"
    },
    "Lambda Invoke": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:<<YOUR_AWS_ACCOUNT_ID>>:function:<<YOUR_PRESIGNED_URL_FUNCTION>>",
        "Payload": {
          "Bucket": "<<YOUR_UPLOAD_BUCKET>>",
          "Key.$": "$.Hash.Value"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "CopyObject",
      "ResultPath": "$.Url",
      "ResultSelector": {
        "Data.$": "$.Payload"
      }
    },
    "CopyObject": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/index.html",
        "Key.$": "States.Format('{}/index.html', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "Next": "CopyObject (1)",
      "ResultPath": "$.co1"
    },
    "CopyObject (1)": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/logo192.png",
        "Key.$": "States.Format('{}/logo192.png', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "Next": "CopyObject (2)",
      "ResultPath": "$.co1"
    },
    "CopyObject (2)": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/logo512.png",
        "Key.$": "States.Format('{}/logo512.png', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "Next": "CopyObject (3)",
      "ResultPath": "$.co1"
    },
    "CopyObject (3)": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/manifest.json",
        "Key.$": "States.Format('{}/manifest.json', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "Next": "CopyObject (4)",
      "ResultPath": "$.co1"
    },
    "CopyObject (4)": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/robots.txt",
        "Key.$": "States.Format('{}/robots.txt', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "Next": "CopyObject (5)",
      "ResultPath": "$.co1"
    },
    "CopyObject (5)": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/favicon.ico",
        "Key.$": "States.Format('{}/favicon.ico', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "Next": "CopyObject (6)",
      "ResultPath": "$.co1"
    },
    "CopyObject (6)": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
        "CopySource": "<<YOUR_WEBSITE_BUCKET>>/asset-manifest.json",
        "Key.$": "States.Format('{}/asset-manifest.json', $.Hash.Value)"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:copyObject",
      "ResultPath": "$.co1",
      "Next": "Lambda Invoke (2)"
    },
    "Lambda Invoke (2)": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:<<YOUR_AWS_ACCOUNT_ID>>:function:<<YOUR_EMBED_PRESIGNED_URL_FUNCTION>>",
        "Payload": {
          "Bucket": "<<YOUR_WEBSITE_BUCKET>>",
          "Key.$": "States.Format('{}/index.html', $.Hash.Value)",
          "PreSignUrl.$": "$.Url.Data.Url"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "ResultPath": "$.Cp",
      "ResultSelector": {
        "Data.$": "$.Payload"
      },
      "Next": "SendEmail"
    },
    "SendEmail": {
      "Type": "Task",
      "Parameters": {
        "FromEmailAddress": "<<YOUR_SES_IDENTITY>>",
        "Destination": {
          "ToAddresses.$": "States.Array($.detail.data.object.customer_details.email)"
        },
        "Content": {
          "Simple": {
            "Subject": {
              "Data": "[sample-transcribe-servcie] Your audio file is ready for upload",
              "Charset": "UTF-8"
            },
            "Body": {
              "Text": {
                "Charset": "UTF-8",
                "Data.$": "States.Format('Thank you! Please upload media via link: http://<<YOUR_WEBSITE_BUCKET>>.s3-website-us-east-1.amazonaws.com/{}/index.html', $.Hash.Value)"
              }
            }
          }
        }
      },
      "Resource": "arn:aws:states:::aws-sdk:sesv2:sendEmail",
      "ResultPath": "$.Mail",
      "Next": "DynamoDB PutItem"
    },
    "DynamoDB PutItem": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "purchase",
        "Item": {
          "purchase_id": {
            "S.$": "$.Hash.Value"
          },
          "email": {
            "S.$": "$.detail.data.object.customer_details.email"
          }
        }
      },
      "End": true,
      "ResultPath": "$.Put"
    }
  }
}